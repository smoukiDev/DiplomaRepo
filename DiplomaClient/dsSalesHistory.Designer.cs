//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DiplomaClient {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSalesHistory")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSalesHistory : global::System.Data.DataSet {
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsSalesHistory() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsSalesHistory(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsSalesHistory cln = ((dsSalesHistory)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsSalesHistory";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSalesHistory.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSalesHistory ds = new dsSalesHistory();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
}
namespace DiplomaClient.dsSalesHistoryTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[17];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).CommandText = "SH.REGISTERCLIENT";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LOGIN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 160;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASSHASH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 800;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASSSALT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 800;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_FNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_MNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PHONE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ADRESS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_GENDER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 60;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_AVATAR";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Blob;
            param.Size = 1000000000;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ECCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ECHASH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 800;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ECSALT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 800;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            this._commandCollection[1] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[1])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[1])).CommandText = "SH.LOGINLOG";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[1])).Parameters.Add(param);
            this._commandCollection[2] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[2])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[2])).CommandText = "SH.CLOSELOG";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[2])).Parameters.Add(param);
            this._commandCollection[3] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[3])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[3])).CommandText = "SH.LOGOUTLOG";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[3])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[3])).Parameters.Add(param);
            this._commandCollection[4] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[4])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[4])).CommandText = "SH.SHUTDOWNLOG";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[4])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            this._commandCollection[5] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).CommandText = "SH.UPDATEPROFILE";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_USERID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LOGIN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 160;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_FNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_MNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_GENDER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 60;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PHONE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ADRESS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            this._commandCollection[6] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[6])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[6])).CommandText = "SH.UPDATEACCOUNTLOG";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[6])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[6])).Parameters.Add(param);
            this._commandCollection[7] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[7])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[7])).CommandText = "SH.UPDATEPASS";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[7])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_USERID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[7])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[7])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASSHASH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 800;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[7])).Parameters.Add(param);
            this._commandCollection[8] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[8])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[8])).CommandText = "SH.UPDATEPASSLOG";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[8])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[8])).Parameters.Add(param);
            this._commandCollection[9] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[9])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[9])).CommandText = "SH.UPDATEAVATAR";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[9])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_USERID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_AVATAR";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Blob;
            param.Size = 1000000000;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            this._commandCollection[10] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[10])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[10])).CommandText = "SH.PASSRESETLOG";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[10])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[10])).Parameters.Add(param);
            this._commandCollection[11] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).CommandText = "SH.EDITMODELACCESS";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_M1";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_M2";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_M3";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_M4";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_M5";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_M6";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            this._commandCollection[12] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[12])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[12])).CommandText = "SH.BLOCKUSER";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[12])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[12])).Parameters.Add(param);
            this._commandCollection[13] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[13])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[13])).CommandText = "SH.DELETEUSER";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[13])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[13])).Parameters.Add(param);
            this._commandCollection[14] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[14])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[14])).CommandText = "SH.UNBLOCKUSER";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[14])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[14])).Parameters.Add(param);
            this._commandCollection[15] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).CommandText = "SH.UPDATEUSER";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_USERID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LOGIN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 160;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASSHASH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 800;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ISBLOCK";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_FNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_MNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_GENDER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 60;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PHONE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ADRESS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[15])).Parameters.Add(param);
            this._commandCollection[16] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection(global::DiplomaClient.Properties.Settings.Default.cnSalesHistory);
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).CommandText = "SH.CREATEUSER";
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LOGIN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 160;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PASSHASH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 800;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_FNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_LNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_MNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 240;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_PHONE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ADRESS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_GENDER";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_ISBLOCK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 60;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "V_AVATAR";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Blob;
            param.Size = 1000000000;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this._commandCollection[16])).Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int REGISTERCLIENT(string V_LOGIN, string V_PASS, string V_PASSHASH, string V_PASSSALT, string V_FNAME, string V_LNAME, string V_MNAME, string V_EMAIL, string V_PHONE, string V_ADRESS, string V_GENDER, object V_AVATAR, string V_ECCODE, string V_ECHASH, string V_ECSALT) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[0]));
            if ((V_LOGIN == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(V_LOGIN));
            }
            if ((V_PASS == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(V_PASS));
            }
            if ((V_PASSHASH == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(V_PASSHASH));
            }
            if ((V_PASSSALT == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(V_PASSSALT));
            }
            if ((V_FNAME == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(V_FNAME));
            }
            if ((V_LNAME == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(V_LNAME));
            }
            if ((V_MNAME == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(V_MNAME));
            }
            if ((V_EMAIL == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(V_EMAIL));
            }
            if ((V_PHONE == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(V_PHONE));
            }
            if ((V_ADRESS == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(V_ADRESS));
            }
            if ((V_GENDER == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(V_GENDER));
            }
            if ((V_AVATAR == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((object)(V_AVATAR));
            }
            if ((V_ECCODE == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(V_ECCODE));
            }
            if ((V_ECHASH == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(V_ECHASH));
            }
            if ((V_ECSALT == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(V_ECSALT));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int LOGINLOG(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[1]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int CLOSELOG(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[2]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int LOGOUTLOG(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[3]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int SHUTDOWNLOG(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[4]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UPDATEPROFILE(global::System.Nullable<decimal> V_USERID, string V_LOGIN, string V_FNAME, string V_LNAME, string V_MNAME, string V_GENDER, string V_EMAIL, string V_PHONE, string V_ADRESS) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[5]));
            if ((V_USERID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_USERID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((V_LOGIN == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(V_LOGIN));
            }
            if ((V_FNAME == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(V_FNAME));
            }
            if ((V_LNAME == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(V_LNAME));
            }
            if ((V_MNAME == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(V_MNAME));
            }
            if ((V_GENDER == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(V_GENDER));
            }
            if ((V_EMAIL == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(V_EMAIL));
            }
            if ((V_PHONE == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(V_PHONE));
            }
            if ((V_ADRESS == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(V_ADRESS));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UPDATEACCOUNTLOG(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[6]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UPDATEPASS(global::System.Nullable<decimal> V_USERID, string V_PASS, string V_PASSHASH) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[7]));
            if ((V_USERID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_USERID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((V_PASS == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(V_PASS));
            }
            if ((V_PASSHASH == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(V_PASSHASH));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UPDATEPASSLOG(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[8]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UPDATEAVATAR(global::System.Nullable<decimal> V_USERID, object V_AVATAR) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[9]));
            if ((V_USERID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_USERID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((V_AVATAR == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((object)(V_AVATAR));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PASSRESETLOG(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[10]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int EDITMODELACCESS(global::System.Nullable<decimal> V_ID, string V_M1, string V_M2, string V_M3, string V_M4, string V_M5, string V_M6) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[11]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((V_M1 == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(V_M1));
            }
            if ((V_M2 == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(V_M2));
            }
            if ((V_M3 == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(V_M3));
            }
            if ((V_M4 == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(V_M4));
            }
            if ((V_M5 == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(V_M5));
            }
            if ((V_M6 == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(V_M6));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int BLOCKUSER(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[12]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int DELETEUSER(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[13]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UNBLOCKUSER(global::System.Nullable<decimal> V_ID) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[14]));
            if ((V_ID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_ID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int UPDATEUSER(global::System.Nullable<decimal> V_USERID, string V_LOGIN, string V_PASS, string V_PASSHASH, string V_ISBLOCK, string V_FNAME, string V_LNAME, string V_MNAME, string V_GENDER, string V_EMAIL, string V_PHONE, string V_ADRESS) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[15]));
            if ((V_USERID.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(V_USERID.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((V_LOGIN == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(V_LOGIN));
            }
            if ((V_PASS == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(V_PASS));
            }
            if ((V_PASSHASH == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(V_PASSHASH));
            }
            if ((V_ISBLOCK == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(V_ISBLOCK));
            }
            if ((V_FNAME == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(V_FNAME));
            }
            if ((V_LNAME == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(V_LNAME));
            }
            if ((V_MNAME == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(V_MNAME));
            }
            if ((V_GENDER == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(V_GENDER));
            }
            if ((V_EMAIL == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(V_EMAIL));
            }
            if ((V_PHONE == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(V_PHONE));
            }
            if ((V_ADRESS == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(V_ADRESS));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int CREATEUSER(string V_LOGIN, string V_PASS, string V_PASSHASH, string V_FNAME, string V_LNAME, string V_MNAME, string V_EMAIL, string V_PHONE, string V_ADRESS, string V_GENDER, string V_ISBLOCK, object V_AVATAR) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[16]));
            if ((V_LOGIN == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(V_LOGIN));
            }
            if ((V_PASS == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(V_PASS));
            }
            if ((V_PASSHASH == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(V_PASSHASH));
            }
            if ((V_FNAME == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(V_FNAME));
            }
            if ((V_LNAME == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(V_LNAME));
            }
            if ((V_MNAME == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(V_MNAME));
            }
            if ((V_EMAIL == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(V_EMAIL));
            }
            if ((V_PHONE == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(V_PHONE));
            }
            if ((V_ADRESS == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(V_ADRESS));
            }
            if ((V_GENDER == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(V_GENDER));
            }
            if ((V_ISBLOCK == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(V_ISBLOCK));
            }
            if ((V_AVATAR == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((object)(V_AVATAR));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
}

#pragma warning restore 1591